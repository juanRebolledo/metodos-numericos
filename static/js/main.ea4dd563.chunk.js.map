{"version":3,"sources":["components/routes/AppRoutes.js","components/Header/HeaderNav.jsx","components/Header/HeaderTitle.jsx","components/Header/Header.jsx","components/Home/HomePage.jsx","components/Interpolaciones/Utilities/Division.jsx","components/Interpolaciones/Utilities/InterpolacionLineal/FormulaInterpolacionLineal.jsx","components/Interpolaciones/Utilities/FormGroup.jsx","components/Interpolaciones/Utilities/Form.jsx","components/Interpolaciones/Utilities/Utilities.js","components/Interpolaciones/Utilities/ContainerFormulaInterpolacion.jsx","components/Interpolaciones/Utilities/ContainerResults.jsx","components/Interpolaciones/Utilities/ContainerDesarrolloFormula.jsx","components/Interpolaciones/InterpolacionLineal.jsx","components/Interpolaciones/Utilities/InterpolacionCuadratica/FormulaIntCuad.jsx","components/Interpolaciones/InterpolacionCuadratica.jsx","components/Interpolaciones/Utilities/InterpolacionLagrange/FormulaIntFO.jsx","components/Interpolaciones/InterpolacionLagrangeFOrder.jsx","components/Interpolaciones/Utilities/InterpolacionLagrange/FormulaIntSO.jsx","components/Interpolaciones/InterpolacionLagrangeSOrder.jsx","components/404/Component404.jsx","components/routes/RouteComponent.jsx","components/App.jsx","index.js"],"names":["appRoutes","HeaderNav","homePageRoute","intLinealPageRoute","IntCuadraticRoute","IntLagrangeFRoute","IntLagrangeSRoute","to","className","HeaderTitle","Header","HomePage","Division","Numerador","Denominador","FormulaInterpolacionLineal","fx_0","fx_1","x_0","x_1","x","showDevelopment","FormGroup","textLabel","name","placeholder","updateStateWithValuesOfEcuacion","type","onChange","Input","target","value","Form","InterpolationTitle","InterpolationVariables","typeInputCheckboxFx","showHiddenInput","isExtrapolation","map","variable","key","inputCheckbox","checked","InitialStateOfInterpolation","valoresEcuaciones","fx","fxCalculado","containerFormuleMinusOnDivition","f1","f2","x1","x2","calculateRelativeError","valorfxCalculado","Math","abs","calculateExtrapolationTwoValues","min","max","calculateExtrapolationTreeValues","x3","linealInterpolationVariables","quadraticInterpolationVariables","lagrangeFirstOrderInterpolationVariables","lagrangeSecondOrderInterpolationVariables","ContainerFormulaInterpolacion","H4Title","PResult","Error","style","color","substr","ContainerResults","resultFx","ContainerDesarrolloFormula","ComponentFormule","InterpolacionLineal","props","valueOfCheckbox","setState","state","Name","Value","length","parseFloat","this","calculateLinearInterpolationEquation","Component","FormulaInterpolacionCuadratica","fx_2","x_2","InterpolacionCuadratica","b1","calculateQuadratictInterpolationEquation","FromulaInterpolacionLagrangeFirstOrder","InterpolacionLagrangeFOrder","calculateLagrangeFirstOrderInterpolationEquation","FormulaInterpolacionLagrangeSecondOrder","InterpolacionLagrangeSOrder","calculateLagrangeSecondOrderInterpolationEquation","Component404","RouteComponent","exact","path","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea4dd563.chunk.js","sourcesContent":["export const appRoutes = {\r\n    homePageRoute: \"/metodos-numericos\",\r\n    intLinealPageRoute: \"/interpolacion-lineal\",\r\n    IntCuadraticRoute: \"/interpolacion-cuadratica\",\r\n    IntLagrangeFRoute: \"/interpolacion-lagrange-first\",\r\n    IntLagrangeSRoute: \"/interpolacion-lagrange-second\"\r\n  }","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { appRoutes } from \"../routes/AppRoutes\";\r\n\r\nconst HeaderNav = () => {\r\n  const {\r\n    homePageRoute,\r\n    intLinealPageRoute,\r\n    IntCuadraticRoute,\r\n    IntLagrangeFRoute,\r\n    IntLagrangeSRoute,\r\n  } = appRoutes;\r\n  return (\r\n    <nav>\r\n      <NavLink to={homePageRoute + intLinealPageRoute}>Interpolación lineal</NavLink>\r\n      <NavLink to={homePageRoute + IntCuadraticRoute}>Interpolación cuadratica</NavLink>\r\n      <div className=\"dropdown\">\r\n        <p>Interpolacion de Lagrange</p>\r\n        <div className=\"dropdown-container\">\r\n          <div className=\"dropdown-content\">\r\n            <NavLink to={homePageRoute + IntLagrangeFRoute}>Primer orden</NavLink>\r\n            <NavLink to={homePageRoute + IntLagrangeSRoute}>Segundo orden</NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default HeaderNav;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst HeaderTitle = () => {\r\n  return (\r\n    <div className=\"container-headerTitle\">\r\n      <NavLink to=\"/metodosnumericosInterpolaciones/\">\r\n        <h1>Calculadora Interpolaciones</h1>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderTitle;\r\n","import React from 'react';\r\n\r\nimport HeaderNav from './HeaderNav'\r\nimport HeaderTitle from './HeaderTitle';\r\nimport '../../styles/Header/Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <HeaderTitle />\r\n            <HeaderNav />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"homepage\">\r\n            <p>Alumno: José Juan Rebolledo Kamey</p>\r\n            <p>Materia: Métodos numéricos</p>\r\n            <p>Profesor: Gerardo Emmanuel Cardenas Villa</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React from \"react\";\r\n\r\nconst Division = ({ Numerador, Denominador }) => {\r\n  return (\r\n    <>\r\n      <div className=\"showDivition\">\r\n        <Numerador />\r\n        <div className=\"separator\" />\r\n        <Denominador />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Division;\r\n","import React from \"react\";\r\n\r\nimport Division from '..//Division'\r\n\r\nconst FormulaInterpolacionLineal = ({ fx_0, fx_1, x_0, x_1, x, showDevelopment }) => {\r\n  return (\r\n    <div className=\"container-formula\">\r\n      {showDevelopment ? (\r\n        <>\r\n          <p>f(x) = {`${fx_0}+`}</p>\r\n          <div className=\"showDivition\">\r\n            <Division \r\n              Numerador = { () => <p>{` ${fx_1 - fx_0} `}</p> }\r\n              Denominador = { () => <p>{`${x_1 - x_0}`}</p> }\r\n            />\r\n          </div>\r\n          <p>{`(${x - x_0})`}</p>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p>f(x) = {`${fx_0}+`}</p>\r\n          <div className=\"showDivition\">\r\n            <Division \r\n              Numerador = { () => <p>{` ${fx_1} - ${fx_0} `}</p> }\r\n              Denominador = { () => <p>{`${x_1} - ${x_0}`}</p> }\r\n            />\r\n          </div>\r\n          <p>{`(${x} - ${x_0})`}</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormulaInterpolacionLineal;\r\n","import React from \"react\";\r\n\r\n\r\n\r\nconst FormGroup = ({textLabel, name, placeholder, updateStateWithValuesOfEcuacion}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{textLabel}</label>\r\n      <input \r\n        type=\"number\" \r\n        name = {name}\r\n        placeholder={placeholder} \r\n        onChange={ Input => {\r\n          updateStateWithValuesOfEcuacion( Input.target.name, Input.target.value )\r\n        } }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormGroup;\r\n","import React from \"react\";\r\nimport FormGroup from \"./FormGroup\";\r\n\r\nconst Form = ({\r\n  InterpolationTitle,\r\n  InterpolationVariables,\r\n  updateStateWithValuesOfEcuacion,\r\n  typeInputCheckboxFx,\r\n  showHiddenInput,\r\n  isExtrapolation,\r\n}) => {\r\n  return (\r\n    <section className=\"container-ecuaciones\">\r\n      <div className=\"container-intlineal\">\r\n        <div className=\"container-title\">\r\n          <h3>{InterpolationTitle}</h3>\r\n        </div>\r\n        <div className=\"container-form\">\r\n          {InterpolationVariables.map(({ variable, placeholder }) => (\r\n            <FormGroup\r\n              key={variable}\r\n              name={variable}\r\n              updateStateWithValuesOfEcuacion={updateStateWithValuesOfEcuacion}\r\n              textLabel={`Ingrese el valor de ${placeholder}`}\r\n              placeholder={placeholder}\r\n            />\r\n          ))}\r\n          {typeInputCheckboxFx ? (\r\n            <FormGroup\r\n              name=\"fx\"\r\n              updateStateWithValuesOfEcuacion={updateStateWithValuesOfEcuacion}\r\n              textLabel=\"Valor exacto f(x)\"\r\n              placeholder=\"Valor exacto f(x)\"\r\n            />\r\n          ) : null}\r\n        </div>\r\n        <div className=\"container-button\">\r\n          <div className=\"container-checkInput\">\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={(inputCheckbox) =>\r\n                showHiddenInput(inputCheckbox.target.checked)\r\n              }\r\n            />\r\n            <label>¿Tienes un valor exacto para f(x)?</label>\r\n          </div>\r\n          <label>\r\n            {isExtrapolation\r\n              ? \"Los datos ingresados dan como resultado una extrapolación\"\r\n              : \"\"}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","export const InitialStateOfInterpolation = {\r\n  typeInputCheckboxFx: false, // Este valor servira para verificar si el checkbox tiene un valor true o false\r\n  valoresEcuaciones: {  // Este objeto contendra todos los valores de la ecuacion para poder ser ejecutados en tiempo real\r\n    fx: 0,\r\n    x: 0,\r\n    fx_0: 0,\r\n    fx_1: 0,\r\n    x_0: 0,\r\n    x_1: 0\r\n  },\r\n  fxCalculado: 0  // Este valor sera el resultado de la ecuacion\r\n}\r\n\r\nexport const containerFormuleMinusOnDivition = (f1, f2, x1, x2) => {\r\n  return (f1 - f2) / (x1 - x2);\r\n};\r\n\r\nexport const calculateRelativeError = (fx, valorfxCalculado) => {\r\n  return `Error = ${Math.abs((fx - valorfxCalculado) / fx) * 100}%`\r\n}\r\n\r\nexport const calculateLinearInterpolationEquation = (fx_0, fx_1, x_0, x_1, x) => {\r\n  return {valorfxCalculado: fx_0 + (containerFormuleMinusOnDivition(fx_1, fx_0, x_1, x_0) * (x - x_0)), isExtrapolation: calculateExtrapolationTwoValues(x, x_0, x_1)}\r\n}\r\n\r\nexport const calculateQuadratictInterpolationEquation = (fx_0, fx_1, fx_2, x_0, x_1, x_2, x) => {\r\n  let b1 = containerFormuleMinusOnDivition(fx_1, fx_0, x_1, x_0);\r\n  let b2 = containerFormuleMinusOnDivition(\r\n    containerFormuleMinusOnDivition(fx_2, fx_1, x_2, x_1),\r\n    b1,\r\n    x_2,\r\n    x_0\r\n  );\r\n  return {valorfxCalculado: fx_0 + b1 * (x - x_0) + b2 * (x - x_0) * (x - x_1), isExtrapolation: calculateExtrapolationTreeValues(x, x_0, x_1, x_2)}; // Conforme los valores del State cambien, la variable de bloque valorfxCalculado se ira modificando\r\n}\r\n\r\nexport const calculateLagrangeFirstOrderInterpolationEquation = (fx_0, fx_1, x_0, x_1, x) => {\r\n  let lo = containerFormuleMinusOnDivition(x, x_1, x_0, x_1)\r\n  let li = containerFormuleMinusOnDivition(x, x_0, x_1, x_0)\r\n  return {valorfxCalculado: (lo * fx_0) + (li * fx_1), isExtrapolation: calculateExtrapolationTwoValues(x, x_0, x_1)}\r\n}\r\n\r\nexport const calculateLagrangeSecondOrderInterpolationEquation = (fx_0, fx_1, fx_2, x_0, x_1, x_2, x) => {\r\n  let lo = containerFormuleMinusOnDivition(x, x_1, x_0, x_1) * containerFormuleMinusOnDivition(x, x_2, x_0, x_2)\r\n  let li = containerFormuleMinusOnDivition(x, x_0, x_1, x_0) * containerFormuleMinusOnDivition(x, x_2, x_1, x_2)\r\n  let l2 = containerFormuleMinusOnDivition(x, x_0, x_2, x_0) * containerFormuleMinusOnDivition(x, x_1, x_2, x_1)\r\n  return {valorfxCalculado: (lo * fx_0) + (li * fx_1) + (l2 * fx_2), isExtrapolation: calculateExtrapolationTreeValues(x, x_0, x_1, x_2,)}\r\n}\r\n\r\nexport const calculateExtrapolationTwoValues = (x, x1, x2) => { // Funcion que devuelve true si no es una extrapolacion\r\n  return !(Math.min(x1, x2) <= x && x <= Math.max(x1, x2));\r\n}\r\n\r\nexport const calculateExtrapolationTreeValues = (x, x1, x2, x3) => {\r\n  return !(Math.min(x1, x2, x3) <= x && x <= Math.max(x1, x2, x3)) \r\n}\r\n\r\nexport const linealInterpolationVariables = [{\r\n  variable: 'x_0',\r\n  placeholder: 'x0'\r\n},\r\n{\r\n  variable: 'x_1',\r\n  placeholder: 'x1'\r\n},\r\n{\r\n  variable: 'fx_0',\r\n  placeholder: 'f(x0)'\r\n},\r\n{\r\n  variable: 'fx_1',\r\n  placeholder: 'f(x1)'\r\n},\r\n{\r\n  variable: 'x',\r\n  placeholder: 'x'\r\n}]\r\n\r\nexport const quadraticInterpolationVariables = [{\r\n  variable: 'x_0',\r\n  placeholder: 'x0'\r\n},\r\n{\r\n  variable: 'x_1',\r\n  placeholder: 'x1'\r\n},\r\n{\r\n  variable: 'x_2',\r\n  placeholder: 'x2'\r\n},\r\n{\r\n  variable: 'fx_0',\r\n  placeholder: 'f(x0)'\r\n},\r\n{\r\n  variable: 'fx_1',\r\n  placeholder: 'f(x1)'\r\n},\r\n{\r\n  variable: 'fx_2',\r\n  placeholder: 'f(x2)'\r\n},\r\n{\r\n  variable: 'x',\r\n  placeholder: 'x'\r\n}]\r\n\r\nexport const lagrangeFirstOrderInterpolationVariables = [\r\n  {\r\n    variable: 'x_0',\r\n    placeholder: 'x0'\r\n  },\r\n  {\r\n    variable: 'x_1',\r\n    placeholder: 'x1'\r\n  },\r\n  {\r\n    variable: 'fx_0',\r\n    placeholder: 'f(x0)'\r\n  },\r\n  {\r\n    variable: 'fx_1',\r\n    placeholder: 'f(x1)'\r\n  },\r\n  {\r\n    variable: 'x',\r\n    placeholder: 'x'\r\n  }] \r\n\r\nexport const lagrangeSecondOrderInterpolationVariables = [{\r\n  variable: 'x_0',\r\n  placeholder: 'x0'\r\n},\r\n{\r\n  variable: 'x_1',\r\n  placeholder: 'x1'\r\n},\r\n{\r\n  variable: 'x_2',\r\n  placeholder: 'x2'\r\n},\r\n{\r\n  variable: 'fx_0',\r\n  placeholder: 'f(x0)'\r\n},\r\n{\r\n  variable: 'fx_1',\r\n  placeholder: 'f(x1)'\r\n},\r\n{\r\n  variable: 'fx_2',\r\n  placeholder: 'f(x2)'\r\n},\r\n{\r\n  variable: 'x',\r\n  placeholder: 'x'\r\n}]\r\n","import React from \"react\";\r\n\r\nconst ContainerFormulaInterpolacion = ({ H4Title, PResult, Error = false }) => {\r\n  return (\r\n    <div className=\"container-formulaInterpolacion\">\r\n      <h4>{H4Title}</h4>\r\n      {Error ? <p style={{ color: \"green\" }}>{PResult.substr(0, 20)}</p> : <p>{PResult.substr(0, 20)}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContainerFormulaInterpolacion;\r\n","import React from \"react\";\r\n\r\nimport { calculateRelativeError } from './Utilities'\r\nimport ContainerFormulaInterpolacion from \"./ContainerFormulaInterpolacion\";\r\n\r\nconst ContainerResults = ({ valorfxCalculado, typeInputCheckboxFx, fx }) => {\r\n  let resultFx = `f(x) = ${valorfxCalculado}`;\r\n  return (\r\n    <div className=\"container-resultados\">\r\n      <ContainerFormulaInterpolacion\r\n        key={valorfxCalculado}\r\n        H4Title=\"Resultado\"\r\n        PResult={resultFx}\r\n      />\r\n      {typeInputCheckboxFx ? (\r\n        <ContainerFormulaInterpolacion \r\n          key = { calculateRelativeError(fx, valorfxCalculado) }\r\n          H4Title = \"Error relativo\"\r\n          PResult = {calculateRelativeError(fx, valorfxCalculado)}\r\n          Error = {true}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContainerResults;\r\n","import React from \"react\";\r\n\r\nimport ContainerResults from \"./ContainerResults\";\r\n\r\nconst ContainerDesarrolloFormula = ({\r\n  ComponentFormule,\r\n  valorfxCalculado,\r\n  typeInputCheckboxFx,\r\n  fx\r\n}) => {  \r\n  return (\r\n    <>\r\n      <div className=\"container-formulaInterpolacion\">\r\n        <h4>Desarrollo</h4>\r\n        <div className=\"container-desarrolloFormula\">\r\n          <ComponentFormule />\r\n        </div>\r\n      </div>\r\n      {valorfxCalculado.valorfxCalculado || valorfxCalculado.valorfxCalculado === 0 ? (\r\n        <ContainerResults\r\n          valorfxCalculado={valorfxCalculado.valorfxCalculado}\r\n          typeInputCheckboxFx={typeInputCheckboxFx}\r\n          fx={fx}\r\n          key={valorfxCalculado}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContainerDesarrolloFormula;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../../styles/Interpolaciones/InterpolacionLineal.css\";\r\nimport FormulaInterpolacionLineal from \"./Utilities/InterpolacionLineal/FormulaInterpolacionLineal\";\r\nimport Form from \"./Utilities/Form\";\r\nimport {\r\n  InitialStateOfInterpolation,\r\n  calculateLinearInterpolationEquation,\r\n  linealInterpolationVariables\r\n} from \"./Utilities/Utilities\";\r\nimport ContainerDesarrolloFormula from \"./Utilities/ContainerDesarrolloFormula\";\r\n\r\nexport default class InterpolacionLineal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = InitialStateOfInterpolation; // Se declara un State en el constructor de la Clase\r\n  }\r\n\r\n  // Se crea un metodo el cual recibe un valor booleano\r\n  showHiddenInput = valueOfCheckbox => {\r\n    this.setState({\r\n      typeInputCheckboxFx: valueOfCheckbox,\r\n      valoresEcuaciones: { ...this.state.valoresEcuaciones, fx: 0 }\r\n    }); // Se actualiza el State con un valor booleano recibido como parametro en el metodo\r\n  };\r\n\r\n  // Metodo el cual recibe dos valores, el Name del input y el valor para posteriormente actualizar el State\r\n  updateStateWithValuesOfEcuacion = (Name, Value) => {\r\n    if (Value.length === 0) Value = 0; // Si se recibe un Value con una longitud de 0 (Vacio) se le asignara el valor numerico 0\r\n\r\n    this.setState({\r\n      valoresEcuaciones: {\r\n        ...this.state.valoresEcuaciones, // Los valores que se tengan en el objeto se guardan para no ser sobreescritos por solamente el dato del input\r\n        [Name]: parseFloat(Value) // Se actualiza exactamente el valor del estado proveniente del input. Al tener un name igual al valor del objeto, los datos actualiados se guardan en el dato correcto\r\n      }\r\n    });\r\n  };\r\n\r\n  // Metodo de la clase el cual permite que el contenido jsx se renderee cada vez que el State cambie\r\n  render() {\r\n    let { fx, fx_0, fx_1, x, x_0, x_1 } = this.state.valoresEcuaciones;\r\n    let valorfxCalculado = calculateLinearInterpolationEquation(\r\n      fx_0,\r\n      fx_1,\r\n      x_0,\r\n      x_1,\r\n      x\r\n    );\r\n    return (\r\n      <>\r\n        <Form\r\n          updateStateWithValuesOfEcuacion={this.updateStateWithValuesOfEcuacion}\r\n          typeInputCheckboxFx={this.state.typeInputCheckboxFx}\r\n          showHiddenInput={this.showHiddenInput}\r\n          InterpolationVariables={linealInterpolationVariables}\r\n          InterpolationTitle=\"Interpolación lineal\"\r\n          isExtrapolation= {valorfxCalculado.isExtrapolation}\r\n        />\r\n        <section className=\"container-show\">\r\n          <div className=\"container-showFormula\">\r\n            <div className=\"container-formulaInterpolacion\">\r\n              <h4>Formula Interpolación Lineal</h4>\r\n              <FormulaInterpolacionLineal\r\n                fx_0=\"f(x0)\"\r\n                fx_1=\"f(x1)\"\r\n                x_1=\"x1\"\r\n                x_0=\"x0\"\r\n                x=\"x\"\r\n                showDevelopment={false}\r\n              />\r\n            </div>\r\n            {x_0 !== 0 || x_1 !== 0 ? (\r\n              <ContainerDesarrolloFormula\r\n                valorfxCalculado={valorfxCalculado.valorfxCalculado}\r\n                typeInputCheckboxFx={this.state.typeInputCheckboxFx}\r\n                fx={fx}\r\n                key={valorfxCalculado.valorfxCalculado}\r\n                ComponentFormule={() => (\r\n                  <>\r\n                    <FormulaInterpolacionLineal\r\n                      fx_0={fx_0}\r\n                      fx_1={fx_1}\r\n                      x_1={x_1}\r\n                      x_0={x_0}\r\n                      x={x}\r\n                      showDevelopment={false}\r\n                    />\r\n                    <FormulaInterpolacionLineal\r\n                      fx_0={fx_0}\r\n                      fx_1={fx_1}\r\n                      x_1={x_1}\r\n                      x_0={x_0}\r\n                      x={x}\r\n                      showDevelopment={true}\r\n                    />\r\n                  </>\r\n                )}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport Division from \"../Division\";\r\n\r\nconst FormulaInterpolacionCuadratica = ({\r\n  fx_1,\r\n  fx_2,\r\n  fx_0,\r\n  x,\r\n  x_1,\r\n  x_2,\r\n  x_0\r\n}) => {\r\n  return (\r\n    <div className=\"container-formula\">\r\n      <p>f(x)= {fx_0} +</p>\r\n      {/* B1 */}\r\n      <Division\r\n        Numerador={() => <p>{`${fx_1} - ${fx_0}`}</p>}\r\n        Denominador={() => <p>{`${x_1} - ${x_0}`}</p>}\r\n      />\r\n      <p>({x} - {x_0}) +</p>\r\n      {/* B2 */}\r\n      <Division\r\n        Numerador={() => (\r\n          <>\r\n            <div className=\"divition-lagrange\">\r\n              <Division\r\n                Numerador={() => <p>{`${fx_2} - ${fx_1}`}</p>}\r\n                Denominador={() => <p>{`${x_2}  - ${x_1}`}</p>}\r\n              />\r\n              -\r\n              <Division\r\n                Numerador={() => <p>{`${fx_1} - ${fx_0}`}</p>}\r\n                Denominador={() => <p>{`${x_1} - ${x_0}`}</p>}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        Denominador={() => <p>{`${x_2} - ${x_0}`}</p>}\r\n      />\r\n      <p>{`(${x} - ${x_0})(${x} - ${x_1})`}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormulaInterpolacionCuadratica;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../../styles/Interpolaciones/InterpolacionLineal.css\";\r\nimport Form from \"./Utilities/Form\";\r\nimport {\r\n  InitialStateOfInterpolation,\r\n  calculateQuadratictInterpolationEquation,\r\n  quadraticInterpolationVariables\r\n} from \"./Utilities/Utilities\";\r\nimport FormulaInterpolacionCuadratica from \"./Utilities/InterpolacionCuadratica/FormulaIntCuad\";\r\nimport ContainerDesarrolloFormula from \"./Utilities/ContainerDesarrolloFormula\";\r\n\r\nexport default class InterpolacionCuadratica extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...InitialStateOfInterpolation,\r\n      valoresEcuaciones: {\r\n        ...InitialStateOfInterpolation.valoresEcuaciones,\r\n        fx_2: 0,\r\n        x_2: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  // Se crea un metodo el cual recibe un valor booleano\r\n  showHiddenInput = valueOfCheckbox => {\r\n    this.setState({\r\n      typeInputCheckboxFx: valueOfCheckbox,\r\n      valoresEcuaciones: { ...this.state.valoresEcuaciones, fx: 0 }\r\n    }); // Se actualiza el State con un valor booleano recibido como parametro en el metodo\r\n  };\r\n\r\n  // Metodo el cual recibe dos valores, el Name del input y el valor para posteriormente actualizar el State\r\n  updateStateWithValuesOfEcuacion = (Name, Value) => {\r\n    if (Value.length === 0) Value = 0; // Si se recibe un Value con una longitud de 0 (Vacio) se le asignara el valor numerico 0\r\n\r\n    this.setState({\r\n      valoresEcuaciones: {\r\n        ...this.state.valoresEcuaciones, // Los valores que se tengan en el objeto se guardan para no ser sobreescritos por solamente el dato del input\r\n        [Name]: parseFloat(Value) // Se actualiza exactamente el valor del estado proveniente del input. Al tener un name igual al valor del objeto, los datos actualiados se guardan en el dato correcto\r\n      }\r\n    });\r\n  };\r\n\r\n  // Metodo de la clase el cual permite que el contenido jsx se renderee cada vez que el State cambie\r\n  render() {\r\n    let {\r\n      fx,\r\n      x,\r\n      fx_0,\r\n      fx_1,\r\n      fx_2,\r\n      x_0,\r\n      x_1,\r\n      x_2\r\n    } = this.state.valoresEcuaciones;\r\n    let valorfxCalculado = calculateQuadratictInterpolationEquation(\r\n      fx_0,\r\n      fx_1,\r\n      fx_2,\r\n      x_0,\r\n      x_1,\r\n      x_2,\r\n      x\r\n    ); // Conforme los valores del State cambien, la variable de bloque valorfxCalculado se ira modificando\r\n\r\n    return (\r\n      <>\r\n        <Form\r\n          updateStateWithValuesOfEcuacion={this.updateStateWithValuesOfEcuacion}\r\n          typeInputCheckboxFx={this.state.typeInputCheckboxFx}\r\n          showHiddenInput={this.showHiddenInput}\r\n          InterpolationVariables={quadraticInterpolationVariables}\r\n          InterpolationTitle=\"Interpolación cuadratica\"\r\n          isExtrapolation= {valorfxCalculado.isExtrapolation}\r\n        />\r\n        <section className=\"container-show\">\r\n          <div className=\"container-showFormula\">\r\n            <div className=\"container-formulaInterpolacion\">\r\n              <h4>Formula Interpolación Cuadratica</h4>\r\n              <FormulaInterpolacionCuadratica\r\n                fx_0=\"f(x0)\"\r\n                fx_1=\"f(x1)\"\r\n                fx_2=\"f(x2)\"\r\n                x = \"x\"\r\n                x_0=\"x0\"\r\n                x_1=\"x1\"\r\n                x_2=\"x2\"\r\n              />\r\n            </div>\r\n            {x_0 !== 0 || x_1 !== 0 || x_2 !== 0 ? (\r\n              <ContainerDesarrolloFormula\r\n                valorfxCalculado={valorfxCalculado.valorfxCalculado}\r\n                typeInputCheckboxFx={this.state.typeInputCheckboxFx}\r\n                fx={fx}\r\n                key={valorfxCalculado.valorfxCalculado}\r\n                ComponentFormule={() => (\r\n                  <FormulaInterpolacionCuadratica\r\n                    fx_0={fx_0}\r\n                    fx_1={fx_1}\r\n                    fx_2={fx_2}\r\n                    x = {x}\r\n                    x_0={x_0}\r\n                    x_1={x_1}\r\n                    x_2={x_2}\r\n                  />\r\n                )}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport Division from \"../Division\";\r\n\r\nconst FromulaInterpolacionLagrangeFirstOrder = ({\r\n  fx_0,\r\n  fx_1,\r\n  x_0,\r\n  x_1,\r\n  x\r\n}) => {\r\n  return (\r\n    <div className=\"container-formula\">\r\n      <p>f(x) = </p>\r\n      <div className=\"showDivition\">\r\n        <Division\r\n          Numerador={() => <p>{` ${x} - ${x_1} `}</p>}\r\n          Denominador={() => <p>{`${x_0} - ${x_1}`}</p>}\r\n        />\r\n      </div>\r\n      <p>({fx_0}) +</p>\r\n      <div className=\"showDivition\">\r\n        <Division\r\n          Numerador={() => <p>{` ${x} - ${x_0} `}</p>}\r\n          Denominador={() => <p>{`${x_1} - ${x_0}`}</p>}\r\n        />\r\n      </div>\r\n      <p>({fx_1})</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FromulaInterpolacionLagrangeFirstOrder;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../../styles/Interpolaciones/InterpolacionLineal.css\";\r\nimport Form from \"./Utilities/Form\";\r\nimport {\r\n  InitialStateOfInterpolation,\r\n  lagrangeFirstOrderInterpolationVariables,\r\n  calculateLagrangeFirstOrderInterpolationEquation,\r\n} from \"./Utilities/Utilities\";\r\nimport FormulaInterpolacionLagrangeFirstOrder from \"./Utilities/InterpolacionLagrange/FormulaIntFO\";\r\nimport ContainerDesarrolloFormula from \"./Utilities/ContainerDesarrolloFormula\";\r\n\r\nexport default class InterpolacionLagrangeFOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...InitialStateOfInterpolation,\r\n      valoresEcuaciones: {\r\n        ...InitialStateOfInterpolation.valoresEcuaciones,\r\n        fx_2: 0,\r\n        x_2: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  showHiddenInput = (valueOfCheckbox) => {\r\n    this.setState({\r\n      typeInputCheckboxFx: valueOfCheckbox,\r\n      valoresEcuaciones: { ...this.state.valoresEcuaciones, fx: 0 },\r\n    }); \r\n  };\r\n\r\n  updateStateWithValuesOfEcuacion = (Name, Value) => {\r\n    if (Value.length === 0) Value = 0; \r\n    \r\n    this.setState({\r\n      valoresEcuaciones: {\r\n        ...this.state.valoresEcuaciones,\r\n        [Name]: parseFloat(Value),\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      fx,\r\n      x,\r\n      fx_0,\r\n      fx_1,\r\n      x_0,\r\n      x_1,\r\n    } = this.state.valoresEcuaciones;\r\n    let valorfxCalculado = calculateLagrangeFirstOrderInterpolationEquation(\r\n      fx_0,\r\n      fx_1,\r\n      x_0,\r\n      x_1,\r\n      x\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Form\r\n          updateStateWithValuesOfEcuacion={this.updateStateWithValuesOfEcuacion}\r\n          typeInputCheckboxFx={this.state.typeInputCheckboxFx}\r\n          showHiddenInput={this.showHiddenInput}\r\n          InterpolationVariables={lagrangeFirstOrderInterpolationVariables}\r\n          InterpolationTitle=\"Interpolación Lagrange primer orden\"\r\n          isExtrapolation={valorfxCalculado.isExtrapolation}\r\n        />\r\n        <section className=\"container-show\">\r\n          <div className=\"container-showFormula\">\r\n            <div className=\"container-formulaInterpolacion\">\r\n              <h4>Formula Lagrange Primer Orden</h4>\r\n              <FormulaInterpolacionLagrangeFirstOrder\r\n                fx_0=\"f(x0)\"\r\n                fx_1=\"f(x1)\"\r\n                x_0=\"x0\"\r\n                x_1=\"x1\"\r\n                x=\"x\"\r\n              />\r\n            </div>\r\n            {x_0 !== 0 || x_1 !== 0 ? (\r\n              <ContainerDesarrolloFormula\r\n                valorfxCalculado={valorfxCalculado}\r\n                typeInputCheckboxFx={this.state.typeInputCheckboxFx}\r\n                fx={fx}\r\n                key={valorfxCalculado}\r\n                ComponentFormule={() => (\r\n                  <FormulaInterpolacionLagrangeFirstOrder\r\n                    fx_0={fx_0}\r\n                    fx_1={fx_1}\r\n                    x_0={x_0}\r\n                    x_1={x_1}\r\n                    x={x}\r\n                  />\r\n                )}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport Division from '../Division'\r\nconst FormulaInterpolacionLagrangeSecondOrder = ({\r\n    fx_0, fx_1, fx_2, x_0, x_1, x_2, x\r\n}) => {\r\n  return (\r\n    <div className=\"container-formula\">\r\n      <p>f(x) = </p>\r\n      <div className=\"showDivition\">\r\n        <Division\r\n          Numerador={() => <p>{` ${x} - ${x_1} `}</p>}\r\n          Denominador={() => <p>{`${x_0} - ${x_1}`}</p>}\r\n        />\r\n      </div>\r\n      <p>*</p>\r\n      <div className=\"showDivition\">\r\n        <Division\r\n          Numerador={() => <p>{` ${x} - ${x_2} `}</p>}\r\n          Denominador={() => <p>{`${x_0} - ${x_2}`}</p>}\r\n        />\r\n      </div>\r\n      <p>({fx_0}) +</p>\r\n      <div className=\"showDivition\">\r\n        <Division\r\n          Numerador={() => <p>{` ${x} - ${x_0} `}</p>}\r\n          Denominador={() => <p>{`${x_1} - ${x_0}`}</p>}\r\n        />\r\n      </div>\r\n      <p>*</p>\r\n      <div className=\"showDivition\">\r\n        <Division\r\n          Numerador={() => <p>{` ${x} - ${x_2} `}</p>}\r\n          Denominador={() => <p>{`${x_1} - ${x_2}`}</p>}\r\n        />\r\n      </div>\r\n      <p>({fx_1}) + </p>\r\n      <div className=\"showDivition\">\r\n        <Division\r\n          Numerador={() => <p>{` ${x} - ${x_0} `}</p>}\r\n          Denominador={() => <p>{`${x_2} - ${x_0}`}</p>}\r\n        />\r\n      </div>\r\n      <p>*</p>\r\n      <div className=\"showDivition\">\r\n        <Division\r\n          Numerador={() => <p>{` ${x} - ${x_1} `}</p>}\r\n          Denominador={() => <p>{`${x_2} - ${x_1}`}</p>}\r\n        />\r\n      </div>\r\n      <p>({fx_2})</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormulaInterpolacionLagrangeSecondOrder;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../../styles/Interpolaciones/InterpolacionLineal.css\";\r\nimport Form from \"./Utilities/Form\";\r\nimport {\r\n  InitialStateOfInterpolation,\r\n  lagrangeSecondOrderInterpolationVariables,\r\n  calculateLagrangeSecondOrderInterpolationEquation,\r\n} from \"./Utilities/Utilities\";\r\nimport FormulaInterpolacionLagrangeSecondOrder from \"./Utilities/InterpolacionLagrange/FormulaIntSO\";\r\nimport ContainerDesarrolloFormula from \"./Utilities/ContainerDesarrolloFormula\";\r\n\r\nexport default class InterpolacionLagrangeSOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...InitialStateOfInterpolation,\r\n      valoresEcuaciones: {\r\n        ...InitialStateOfInterpolation.valoresEcuaciones,\r\n        fx_2: 0,\r\n        x_2: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  // Se crea un metodo el cual recibe un valor booleano\r\n  showHiddenInput = (valueOfCheckbox) => {\r\n    this.setState({\r\n      typeInputCheckboxFx: valueOfCheckbox,\r\n      valoresEcuaciones: { ...this.state.valoresEcuaciones, fx: 0 },\r\n    }); // Se actualiza el State con un valor booleano recibido como parametro en el metodo\r\n  };\r\n\r\n  // Metodo el cual recibe dos valores, el Name del input y el valor para posteriormente actualizar el State\r\n  updateStateWithValuesOfEcuacion = (Name, Value) => {\r\n    if (Value.length === 0) Value = 0; // Si se recibe un Value con una longitud de 0 (Vacio) se le asignara el valor numerico 0\r\n\r\n    this.setState({\r\n      valoresEcuaciones: {\r\n        ...this.state.valoresEcuaciones,\r\n        [Name]: parseFloat(Value),\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      fx,\r\n      x,\r\n      fx_0,\r\n      fx_1,\r\n      fx_2,\r\n      x_0,\r\n      x_1,\r\n      x_2,\r\n    } = this.state.valoresEcuaciones;\r\n    let valorfxCalculado = calculateLagrangeSecondOrderInterpolationEquation(\r\n      fx_0,\r\n      fx_1,\r\n      fx_2,\r\n      x_0,\r\n      x_1,\r\n      x_2,\r\n      x\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Form\r\n          updateStateWithValuesOfEcuacion={this.updateStateWithValuesOfEcuacion}\r\n          typeInputCheckboxFx={this.state.typeInputCheckboxFx}\r\n          showHiddenInput={this.showHiddenInput}\r\n          InterpolationVariables={lagrangeSecondOrderInterpolationVariables}\r\n          InterpolationTitle=\"Interpolación Lagrange segundo orden\"\r\n          isExtrapolation={valorfxCalculado.isExtrapolation}\r\n        />\r\n        <section className=\"container-show\">\r\n          <div className=\"container-showFormula\">\r\n            <div className=\"container-formulaInterpolacion\">\r\n              <h4>Formula interpolacion lagrange de segundo orden</h4>\r\n              <FormulaInterpolacionLagrangeSecondOrder\r\n                fx_0=\"f(x0)\"\r\n                fx_1=\"f(x1)\"\r\n                fx_2=\"f(x2)\"\r\n                x_0=\"x0\"\r\n                x_1=\"x1\"\r\n                x_2=\"x2\"\r\n                x=\"x\"\r\n              />{\" \"}\r\n            </div>\r\n            {x_0 !== 0 || x_1 !== 0 ? (\r\n              <ContainerDesarrolloFormula\r\n                valorfxCalculado={valorfxCalculado}\r\n                typeInputCheckboxFx={this.state.typeInputCheckboxFx}\r\n                fx={fx}\r\n                key={valorfxCalculado}\r\n                ComponentFormule={() => (\r\n                  <FormulaInterpolacionLagrangeSecondOrder\r\n                    fx_0={fx_0}\r\n                    fx_1={fx_1}\r\n                    fx_2={fx_2}\r\n                    x_0={x_0}\r\n                    x_1={x_1}\r\n                    x_2={x_2}\r\n                    x={x}\r\n                  />\r\n                )}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Component404 = () => {\r\n  return (\r\n    <div className=\"homepage\">\r\n      <p>Pagina no encontrada</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Component404;\r\n","import React from \"react\";\r\nimport { Switch, Route } from 'react-router-dom'  \r\n\r\nimport HomePage from '../Home/HomePage'; \r\nimport InterpolacionLineal from \"../Interpolaciones/InterpolacionLineal\";\r\nimport InterpolacionCuadratica from \"../Interpolaciones/InterpolacionCuadratica\"; \r\nimport InterpolacionLagrangeFOrder from \"../Interpolaciones/InterpolacionLagrangeFOrder\";\r\nimport InterpolacionLagrangeSOrder from \"../Interpolaciones/InterpolacionLagrangeSOrder\";\r\nimport Component404 from \"../404/Component404\";\r\nimport { appRoutes } from './AppRoutes'\r\n\r\nconst RouteComponent = () => {\r\n  const {homePageRoute, intLinealPageRoute, IntCuadraticRoute, IntLagrangeFRoute, IntLagrangeSRoute} = appRoutes\r\n  return (\r\n    <Switch> \r\n      <Route exact path={homePageRoute}> \r\n        <HomePage />\r\n      </Route>\r\n      <Route path={homePageRoute+intLinealPageRoute}>\r\n        <InterpolacionLineal />\r\n      </Route>\r\n      <Route path={homePageRoute+IntCuadraticRoute}>\r\n          <InterpolacionCuadratica />\r\n      </Route>\r\n      <Route path={homePageRoute+IntLagrangeFRoute}>\r\n          <InterpolacionLagrangeFOrder />\r\n      </Route>\r\n      <Route path={homePageRoute+IntLagrangeSRoute}>\r\n          <InterpolacionLagrangeSOrder />\r\n      </Route>\r\n      <Route>\r\n        <Component404 />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default RouteComponent;\r\n","import React from 'react';\r\n\r\nimport '../styles/App.css';\r\nimport Header from './Header/Header';\r\nimport RouteComponent from './routes/RouteComponent';\r\n\r\nfunction App() {\r\n  return(\r\n    <div className=\"App\">\r\n        <Header />\r\n        <main>\r\n            <RouteComponent />\r\n        </main>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}